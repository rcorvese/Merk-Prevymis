# Merk-Prevymis
#Pharmacy Data Pull

CREATE OR REPLACE TABLE MERK_PREVYMIS_PATIENTS AS
SELECT DISTINCT 
    CLAIM_NUMBER,
    ENCRYPTED_KEY_1,
    ENCRYPTED_KEY_2,
    sha2(ENCRYPTED_KEY_1,256) as modified_ENCRYPTED_KEY_1,
    sha2(ENCRYPTED_KEY_2,256) as modified_ENCRYPTED_KEY_2,
    DIAGNOSIS_CODE,
    coalesce(DATE_OF_SERVICE, DATE_AUTHORIZED, DATE_PRESCRIPTION_WRITTEN) AS year_of_service
  
   
FROM rwd_db.rwd.RAVEN_External_PHARMACY
WHERE coalesce(DATE_OF_SERVICE, DATE_AUTHORIZED, DATE_PRESCRIPTION_WRITTEN) BETWEEN '2011-01-01'
        AND current_date()
    AND PRODUCT_OR_SERVICE_ID IN ('00006307502','00006307504','00006307602',
                                  '00006307604','00006500301','00006500401')
   -- AND lower(response_code) = 'p'
    AND claim_number IS NOT NULL
    AND upper(claim_number) NOT LIKE 'NULL'
    AND encrypted_key_1 IS NOT NULL
    AND upper(encrypted_key_1) NOT LIKE 'NULL'
    AND upper(encrypted_key_1) NOT LIKE ('XXX%')
    AND encrypted_key_1 <> ''
    AND encrypted_key_2 IS NOT NULL
    AND upper(encrypted_key_2) NOT LIKE 'NULL'
    AND upper(encrypted_key_2) NOT LIKE ('XXX%')
    AND encrypted_key_2 <> '';
-----------------------------------------All prevymis Claims-------------------------
CREATE  OR REPLACE TABLE MERK_rx_All_CLAIMS_23082018 AS 
SELECT DISTINCT
 a.Modified_encrypted_key_1 as ENCRYPTED_KEY_1,
a.Modified_encrypted_key_2 as ENCRYPTED_KEY_2,
b.AMOUNT_ATTRIBUTED_TO_SALES_TAX,
b.AMOUNT_EXCEEDING_PERIODIC_BENEFIT_MAXIMUM,
b.AMOUNT_OF_COPAY_OR_COINSURANCE,
b.BASIS_OF_COST_DETERMINATION,
b.BASIS_OF_REIMBURSEMENT_DETERMINATION,
b.BIN_NUMBER,
b.CARRIER_ID,
b.CLAIM_NUMBER,
b.CLAIM_OR_REFERENCE_ID,
b.COMPOUND_CODE,
--CONDOR_PLAN_NAME as Plan_Name,
b.COORDINATION_OF_BENEFITS_COUNT,
b.COUPON_NUMBER,
b.COUPON_TYPE,
b.COUPON_VALUE_AMOUNT,

b.DATE_AUTHORIZED,
b.DATE_OF_BIRTH,
b.DATE_OF_SERVICE,
b.DATE_PRESCRIPTION_WRITTEN,
b.DAYS_SUPPLY,
b.DIAGNOSIS_CODE,
b.DIAGNOSIS_CODE_QUALIFIER,
b.DISPENSE_AS_WRITTEN_DAW_OR_PRODUCT_SELECT_CODE,
b.DISPENSING_FEE_PAID,
b.DISPENSING_FEE_SUBMITTED,
b.FILL_NUMBER,
b.FLAT_SALES_TAX_AMOUNT_PAID,
b.FLAT_SALES_TAX_AMOUNT_SUBMITTED,
b.GROSS_AMOUNT_DUE_SUBMITTED,
b.GROUP_ID,
b.HOME_PLAN,
b.INGREDIENT_COST_PAID,
b.INGREDIENT_COST_SUBMITTED,
b.LEVEL_OF_SERVICE,
b.LOAD_INDICATOR,
b.MAIL_ORDR_IND,
b.NATIONAL_PROVIDER_ID,
b.NCPDP_NUMBER,
b.NUMBER_OF_REFILLS_AUTHORIZED,
b.ORIG_PRESCRIBED_PRODUCT_OR_SERVICE_CODE,
b.ORIG_PRESCRIBED_PRODUCT_OR_SERVICE_CODE_QUALIFIER,
b.ORIG_PRESCRIBED_QUANTITY,
b.OTHER_AMOUNT_CLAIMED_SUBMITTED,
b.OTHER_AMOUNT_CLAIMED_SUBMITTED_QUALIFIER,
b.OTHER_AMOUNT_PAID,
b.OTHER_AMOUNT_PAID_QUALIFIER,
b.OTHER_PAYER_AMOUNT_PAID_QUALIFIER,
b.OTHER_PAYER_AMOUNT_PAID_SUBMITTED,
b.OTHER_PAYER_AMOUNT_RECOGNIZED,
b.OTHER_PAYER_COVERAGE_TYPE,
b.OTHER_PAYER_DATE,
b.OTHER_PAYER_ID,
b.OTHER_PAYER_ID_QUALIFIER,


b.PAYER_ID,
b.PAYER_ID_QUALIFIER,
b.PHARMACY_GID,
b.PHARMACY_LOCATION_POSTAL_CODE,
b.PLAN_IDENTIFICATION,
b.PRESCRIBER_ID,
b.PRESCRIBER_ID_QUALIFIER,
b.PRESCRIBER_LAST_NAME,
b.PRESCRIPTION_OR_SERVICE_REFERENCE_NUMBER,
b.PRESCRIPTION_OR_SERVICE_REFERENCE_NUMBER_QUALIFIER,
b.PRESCRIPTION_ORIGIN_CODE,
b.PRIMARY_CARE_PROVIDER_ID,
b.PRIMARY_CARE_PROVIDER_ID_QUALIFIER,
b.PRIOR_AUTHORIZATION_TYPE_CODE,
b.PRM_LOC_REL_GID,
b.PROCESSOR_CONTROL_NUMBER,
b.PRODUCT_OR_SERVICE_ID,
b.PRODUCT_OR_SERVICE_ID_QUALIFIER,
b.PROFESSIONAL_SERVICE_CODE,
b.PROFESSIONAL_SERVICE_FEE_PAID,
b.PROFESSIONAL_SERVICE_FEE_SUBMITTED,
--b.PROVIDER_ID,
b.PROVIDER_ID_QUALIFIER,
b.PROVIDER_NPI,
b.QUANTITY_DISPENSED,
b.REASON_FOR_SERVICE,
b.RECORD_ID,
b.REJECT_CODE_1,
b.REJECT_CODE_2,
b.REJECT_CODE_3,
b.REJECT_CODE_4,
b.REJECT_CODE_5,
b.REMAINING_BENEFIT_AMOUNT,
b.REMAINING_DEDUCTIBLE_AMOUNT,
b.RESPONSE_CODE,
b.RESULT_OF_SERVICE_CODE,
b.SERVICE_PROVIDER_ID AS PROVIDER_ID,
b.SERVICE_PROVIDER_ID_QUALIFIER,
b.SUBMISSION_CLARIFICATION_CODE,
b.TIME_AUTHORIZED,
b.TOTAL_AMOUNT_PAID,
b.TRANSACTION_CODE,
b.TRANSACTION_COUNT,
b.TYPE_OF_PAYMENT,
b.UNIT_DOSE_INDICATOR,
b.UNIT_OF_MEASURE,
b.VENDOR_ID,
b.VERSION_NUMBER,
b.ZIP3
FROM  MERK_PREVYMIS_PATIENTS A
INNER JOIN rwd_db.rwd.RAVEN_External_PHARMACY B
ON A.ENCRYPTED_KEY_1||A.ENCRYPTED_KEY_2=B.ENCRYPTED_KEY_1||B.ENCRYPTED_KEY_2 
------------------------------------------------All Claims of prevymis patients with plan name----------------------
CREATE OR REPLACE TABLE MERK_RX_DX_ALL_CLAIMS_WITH_PLAN_23082018 AS
SELECT DISTINCT A.*, B.CONDOR_PLAN_NAME as Plan_Name FROM MERK_rx_All_CLAIMS_23082018 A 
left join rwd_db.rwd.OSPREY_T_RX_TXN_CLAIM_STAGE  B on a.claim_number= cast(b.txn_gid as varchar)
